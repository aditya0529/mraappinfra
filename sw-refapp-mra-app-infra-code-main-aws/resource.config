[develop]
deployment_region_1 = eu-central-1
deployment_region_2 = us-east-1
workload_account = 499909335131
deployment_sdlc_account = 064946868561
monitoring_tools_account = 116092379887
oasis_log_destination_name = sw-oasis-refapp-mra-nonprod-cwdestination-main-aws
deployment_role_name = sw-refapp-dev-mradply-role-main-a
workload_idmz_account = 070490149644
main_lz_org_id = o-zwxgcm9bdz
resource_suffix = main-aws
bootstrap_stack_version = /swift/cdk-bootstrap/version
app_infra_stack_name = sw-refapp-dev-mra-stack-main-aws
asset_prefix = sw-cdk-bootstrap-s3
app_env = dev
app_name = mra
service_name = mra
service_name1 = refapp
resource_prefix = sw
cost_center = CA77
azs = 1
app_infra_rds_stack_name = test-cdk-rds
app_infra_rds_stack_name1 = mra-cdk-rds1
app_infra_rds_stack_name2 = mra-cdk-rds2
app_infra_cmk_stack_name = test-cmk-stack
app_infra_cmk_stack_name2 = test-cmk-stack2
app_infra_ecs_stack_name_v1 = mra-cdk-nlb-alb-ecs
app_infra_ecs_stack_name_v2 = mra-cdk-nlb-ecs
app_infra_ecs_stack_name_v2_2 = sw-mra-dev-nlb-ecs2
app_infra_elasticache_stack_name = mra-cdk-elasticache
sns_kms_id = 4ff908ed-e65c-4139-9c12-ad0b0394d811
rds_kms_id = 4ff908ed-e65c-4139-9c12-ad0b0394d811
#rds_kms_id = mrk-c7f35eeffebb407a972302c883332987
rds_kms_id2 = 63014d93-8c45-4680-8ec0-b571d2b68fba
#rds_kms_id2 = mrk-c7f35eeffebb407a972302c883332987
#CMK type is reagional or MRK
cmk_type = MRK
mrk_id = mrk-29eedf0f62074eafb8720c2b1adbd8e7
create_cmk = true
cmk_replication = true
#ecr_repo_name = sw/refapp/flask-snapshots
ecr_repo_name = swift/refapp-mra-snapshots
ssm_agent_ecr_repo_name=test
image_version = v1.24-rds
vpc_id_1 = vpc-00c8c80bffe439f8a
subnet_id_1_1 = subnet-054e8b194d8eaee0b
subnet_id_1_2 = subnet-077f4ee048dc9bb07
vpc_id_2 = vpc-00ee75859539aa431
subnet_id_2_1 = subnet-0d2b53f6a4eb0802e
subnet_id_2_2 = subnet-0dd0280a92c2268a6
#cloud_hosted_domain = cloud01.swift.com
cloud_hosted_domain = refapp.dev.cloud01.swift.com
#hosted_zone_id = Z085569230JANTBTUVLDM
hosted_zone_id = Z0483915VGA6VT035SL6
certificate_name = Certificate for NLB
#container_port = 8080
container_port = 8443
health_check_command = curl -k https://localhost:8443/mra/api/container/health || exit 1
#health_check_command = curl -f http://localhost:8080 || exit 1
database_engine = aurora_postgres
database_instance_type = serverless_v2
database_cluster_type = Regional
enable_global_database = true
database_instance_count = 2
#database_cluster_type = Serverless
#Enable/Disable the stacks.
#Global Database cluster created using l2 constructs
Enable_RDS_stack=true
#Added secondary Database cluster using L1 constructs
Enable_RDS_stack2=true
#Used to migrate Global Database cluster from CMK to MRK
Enable_RDS_stack1=true
Enable_ElasticCache_Stack=false
Enable_NLB_ECS_stack=true
Enable_NLB_ECS_stack2=true
Enable_NLB_ALB_ECS_stack=false
Enable_CMK_Stack1=true
Enable_CMK_Stack2=true
